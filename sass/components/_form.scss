.form {
    &__group:not(:last-child) {
        margin-bottom: 2rem;
    }

    &__input {
        font-size: 1.5rem;
        font-family: inherit;   // Do this because input elements do not inherit font properties by default.
        color: inherit; // Do this because input elements do not inherit font properties by default.
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white, .5);
        border: none;
        border-bottom: 3px solid transparent;
        width: 90%;
        display: block;
        transition: all .3s;    // Add animation for bottom border.

        &:focus {
            outline: none;  // Eliminate blue border on input element given by the browser by default.
            box-shadow: 0 1rem 2rem rgba($color-black, .1); // Do this for accessibility
            border-bottom: 3px solid $color-primary;
        }

        &:focus:invalid {
            border-bottom: 3px solid $color-secondary-dark;
        }

        &::-webkit-input-placeholder {  // This only works in Safari and Chrome.
            color: $color-gray-dark-2;
        }        
    }    

    &__label {
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        display: block;
        transition: all .3s;
    }

    // When the placeholder is shown in the input element, style it. 
    // However, we don't want to style the input but the label.
    // So, we have to select both the input and the label.
    // Label is not a child of the input element. They are siblings.
    // Use the adjacent sibling selector (+). Adjacent sibling is one that follows immediately after
    // the first sibling.
    &__input:placeholder-shown + &__label {
        opacity: 0; // To hide the element. Opacity allows us to animate the effect.
        visibility: hidden; // To remove the element from the page.
        transform: translateY(-4rem);
    }

    &__radio-group {
        width: 49%;
        display: inline-block;  // To prevent line break so they display side-by-side.
    }

    &__radio-input {
        display: none;
    }

    &__radio-label {
        font-size: $default-font-size;
        cursor: pointer;
        position: relative; // This is to allow the radio-button to use position absolute.
        padding-left: 4.5rem;
    }

    &__radio-button {

        height: 3rem;
        width: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;
        display: inline-block;
        position: absolute; // This is okay for the ::after pseudo element. It does not have to be relative. It just needs to be specified.
        left: 0;
        top: -.4rem;

        &::after {
            content: "";    // Pseudo element requires the content property.
            display: block;
            height: 1.3rem;
            width: 1.3rem;
            border-radius: 50%;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            opacity: 0; // Make inner circle invisible at the beginning.
            transition: opacity .2s ;
        }
    }

    &__radio-input:checked ~ &__radio-label &__radio-button::after {
        opacity: 1;
    }
}